# -*- coding: utf-8 -*-
"""
recommendation_engine.py
------------------------
This module defines the routes for interacting with the Recommendation Engine Service.
These routes will forward requests to the corresponding Recommendation Engine microservice.
"""

from fastapi import APIRouter, HTTPException
import requests
from config import settings

router = APIRouter()

@router.get("/{user_id}")
async def get_recommendations(user_id: str):
    """
    Route to retrieve product recommendations for a user based on their profile.
    This route forwards the request to the Recommendation Engine microservice.
    
    Args:
        user_id (str): The ID of the user for whom the recommendations are generated.
    
    Returns:
        dict: The recommendations generated by the Recommendation Engine service.
    
    Raises:
        HTTPException: If the recommendations cannot be retrieved.
    """
    try:
        # Forwarding the request to the Recommendation Engine service
        recommendation_service_url = f"http://recommendation-engine-service/recommendations/{user_id}"
        response = requests.get(recommendation_service_url, timeout=settings.SERVICE_TIMEOUT)
        
        if response.status_code != 200:
            raise HTTPException(status_code=response.status_code, detail="Recommendations not found")
        
        return response.json()
    
    except requests.exceptions.Timeout:
        raise HTTPException(status_code=504, detail="Service timeout")
    except requests.exceptions.RequestException as e:
        raise HTTPException(status_code=500, detail=f"Request failed: {e}")
