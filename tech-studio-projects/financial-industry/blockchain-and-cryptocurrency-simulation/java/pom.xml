<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Specifies the model version of the POM file -->
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <!-- Parent project configuration for Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> <!-- Look up the parent from the repository -->
    </parent>

    <!-- Group ID of the project -->
    <groupId>com.example.bandcsimu</groupId>

    <!-- Artifact ID, the name of the project -->
    <artifactId>blockchainandcryptocurrencysimulation</artifactId>

    <!-- Version of the project -->
    <version>0.0.1-SNAPSHOT</version>

    <!-- Display name for the project -->
    <name>blockchainandcryptocurrencysimulation</name>

    <!-- Short description of the project -->
    <description>Springboot Cryptocurrency and Blockchain Simulation</description>

    <!-- Project URL, can be filled later -->
    <url/>

    <!-- Licenses for the project, can be filled later -->
    <licenses>
        <license/>
    </licenses>

    <!-- Developers involved in the project, can be filled later -->
    <developers>
        <developer/>
    </developers>

    <!-- Source Code Management (SCM) details -->
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>

    <!-- Properties for the project -->
    <properties>
        <!-- Java version to be used for this project -->
        <java.version>23</java.version>
    </properties>

    <!-- Dependencies required for the project -->
    <dependencies>
        <dependency>
            <!-- Spring Boot Actuator for application monitoring and management -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        
        <dependency>
            <!-- Spring AMQP for messaging with RabbitMQ -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Data JPA for database access and management -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Data MongoDB for MongoDB database access -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Security for authentication and authorization -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Boot Starter Web for building web applications -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <!-- Spring Boot DevTools for improved development experience -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional> <!-- Optional dependency -->
        </dependency>

        <dependency>
            <!-- Micrometer registry for Prometheus metrics collection -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <!-- Spring Boot Starter Test for unit testing and integration testing -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope> <!-- Test scope -->
        </dependency>

        <dependency>
            <!-- Spring Rabbit Test for testing AMQP-related code -->
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
            <scope>test</scope> <!-- Test scope -->
        </dependency>

        <dependency>
            <!-- Spring REST Docs for documenting RESTful APIs -->
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope> <!-- Test scope -->
        </dependency>

        <dependency>
            <!-- Spring Security Test for testing security-related features -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope> <!-- Test scope -->
        </dependency>
    </dependencies>

    <!-- Build configuration for the project -->
    <build>
        <plugins>
            <plugin>
                <!-- Asciidoctor Maven Plugin for generating documentation from AsciiDoc files -->
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>generate-docs</id> <!-- Unique ID for the execution -->
                        <phase>prepare-package</phase> <!-- Phase in the build lifecycle -->
                        <goals>
                            <goal>process-asciidoc</goal> <!-- Goal to process AsciiDoc files -->
                        </goals>
                        <configuration>
                            <backend>html</backend> <!-- Output format for the documentation -->
                            <doctype>book</doctype> <!-- Document type -->
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!-- Dependency for Asciidoctor to integrate with Spring REST Docs -->
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>${spring-restdocs.version}</version> <!-- Using property for versioning -->
                    </dependency>
                </dependencies>
            </plugin>
            
            <plugin>
                <!-- Spring Boot Maven Plugin for packaging and running the Spring Boot application -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
